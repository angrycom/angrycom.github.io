{"version":3,"sources":["webpack:///./src/components/Form/Input.jsx","webpack:///./src/components/Form/Select.jsx","webpack:///./src/components/Shop/ShopForm.jsx","webpack:///./src/components/Shop/index.jsx","webpack:///./src/pages/goods/sticker/buy.jsx","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js"],"names":["InputWrap","fieldName","children","className","style","wrap","Input","onChange","state","checker","value","props","useState","message","setMessage","func","e","target","input","filter","Boolean","join","color","Select","select","checkers","name","match","phone","amount","i","ShopForm","email","grade","schoolClass","onSubmit","check","preventDefault","v","length","a","Firebase","orderSticker","alert","replace","type","min","step","map","key","Button","primary","reactive","right","Shop","productName","productImage","Section","Title","card","src","alt","marginTop","title","angry","runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"component---src-pages-goods-sticker-buy-jsx-fc82ae23485aa39204ed.js","sourcesContent":["import React, { useState } from \"react\"\r\nimport style from \"./Input.module.css\"\r\n\r\nexport const InputWrap = ({ fieldName, children }) => {\r\n  return (\r\n    <div className={style.wrap}>\r\n      <label>\r\n        <div className={style.fieldName}>{fieldName}</div>\r\n        {children}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\nconst Input = ({\r\n  fieldName,\r\n  className,\r\n  onChange,\r\n  state,\r\n  checker,\r\n  value,\r\n  ...props\r\n}) => {\r\n  const [message, setMessage] = useState(null)\r\n\r\n  let func = e => {\r\n    state && state[1](e.target.value)\r\n\r\n    if (checker) {\r\n      setMessage(checker(e.target.value))\r\n    }\r\n  }\r\n\r\n  function changed(e) {\r\n    func(e)\r\n    return onChange && onChange(e)\r\n  }\r\n  return (\r\n    <InputWrap fieldName={fieldName}>\r\n      <input\r\n        value={state ? state[0] : value}\r\n        className={[style.input, className].filter(Boolean).join(\" \")}\r\n        onChange={changed}\r\n        {...props}\r\n      />\r\n      {message && message[1] && (\r\n        <div\r\n          style={{\r\n            color: message[0] ? \"green\" : \"red\",\r\n          }}\r\n        >\r\n          {message[1]}\r\n        </div>\r\n      )}\r\n    </InputWrap>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from \"react\"\r\nimport { InputWrap } from \"./Input\"\r\n\r\nimport style from \"./Select.module.css\"\r\nconst Select = ({ fieldName, children, state }) => {\r\n  return (\r\n    <InputWrap fieldName={fieldName}>\r\n      <select\r\n        className={style.select}\r\n        value={state && state[0]}\r\n        onChange={e => {\r\n          state && state[1](e.target.value)\r\n        }}\r\n      >\r\n        {children}\r\n      </select>\r\n    </InputWrap>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import React, { useState } from \"react\"\r\nimport Input from \"../Form/Input\"\r\nimport Button from \"../Form/Button\"\r\nimport Select from \"../Form/Select\"\r\n\r\nimport { replace } from \"gatsby\"\r\nconst checkers = {\r\n  name(name) {\r\n    if (name.match(/^([가-힣]{2,4})$/)) {\r\n      return [true]\r\n    }\r\n    return [false, \"이름은 한글 2~4글자여야 합니다.\"]\r\n  },\r\n  phone(phone) {\r\n    if (phone.match(/^[0-9]{11}$/)) {\r\n      return [true]\r\n    }\r\n    return [false, \"전화번호는 11글자 이상의 숫자여야 합니다. (하이픈 없음)\"]\r\n  },\r\n  amount(i) {\r\n    if (i < 10) {\r\n      return [false, \"10개 이상 주문하셔야 합니다.\"]\r\n    }\r\n    if (i % 10 !== 0) return [false, \"10개 단위로 주문하셔야 합니다.\"]\r\n    return [true, `예상 금액: ${i * 30}₩ ~ ${i * 120}₩`]\r\n  },\r\n}\r\nconst ShopForm = () => {\r\n  const name = useState(\"\")\r\n  const phone = useState(\"\")\r\n  const email = useState(\"\")\r\n  const amount = useState(10)\r\n  const grade = useState(1)\r\n  const schoolClass = useState(1)\r\n\r\n  function onsubmit(e) {\r\n    e.preventDefault()\r\n\r\n    function check(check, value) {\r\n      return checkers[check](value[0])[0]\r\n    }\r\n\r\n    const checkForm =\r\n      [\r\n        check(\"name\", name),\r\n        check(\"phone\", phone),\r\n        check(\"amount\", amount),\r\n      ].filter(v => v === false).length === 0\r\n    if (!checkForm) {\r\n      alert(\"폼을 다시 확인해주세요.\")\r\n      return\r\n    }\r\n    ;(async () => {\r\n      const Firebase = await import(\"../../lib/Firebase\")\r\n      await Firebase.orderSticker({\r\n        name: name[0],\r\n        phone: phone[0],\r\n        email: email[0],\r\n        amount: amount[0],\r\n        grade: grade[0],\r\n        schoolClass: schoolClass[0],\r\n      })\r\n\r\n      alert(\"주문이 완료되었습니다.\")\r\n      replace(\"/\")\r\n    })()\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onsubmit}>\r\n      <Input fieldName=\"이름\" checker={checkers.name} state={name} />\r\n      <Input fieldName=\"전화번호\" checker={checkers.phone} state={phone} />\r\n      <Input fieldName=\"이메일\" type=\"email\" state={email} />\r\n      <Input\r\n        fieldName=\"스티커 개수\"\r\n        type=\"number\"\r\n        min=\"10\"\r\n        step=\"10\"\r\n        state={amount}\r\n        checker={checkers.amount}\r\n      />\r\n      <p>* 120원은 100장 제작 기준이고, 30원은 1000장 제작 기준입니다.</p>\r\n      <Select fieldName=\"학년\" state={grade}>\r\n        {[1, 2, 3].map(i => (\r\n          <option value={i} key={i}>\r\n            {i}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n      <Select fieldName=\"반\" state={schoolClass}>\r\n        {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map(i => (\r\n          <option value={i} key={i}>\r\n            {i}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n      <p>선택한 반으로 배달해 드립니다.</p>\r\n      <Button primary reactive right>\r\n        주문하기\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\nexport default ShopForm\r\n","import React from \"react\"\r\nimport Section from \"../Section\"\r\nimport Title from \"../Section/Title\"\r\nimport ShopForm from \"./ShopForm\"\r\n\r\nimport style from \"./index.module.css\"\r\n\r\nconst Shop = ({ productName, productImage, children }) => {\r\n  return (\r\n    <Section>\r\n      <Title>{productName} 구매하기</Title>\r\n      <div className={style.card}>\r\n        <img src={productImage} alt={productName + \" image\"} />\r\n        <h1>{productName}</h1>\r\n      </div>\r\n      <div style={{ marginTop: 50 }}>{children ? children : <ShopForm />}</div>\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport default Shop\r\n","import React from \"react\"\r\nimport Layout from \"../../../components/layout\"\r\nimport SEO from \"../../../components/seo\"\r\nimport Shop from \"../../../components/Shop\"\r\n\r\nimport angry from \"../../../images/angry.svg\"\r\nexport default function() {\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"화나요 스티커 구매하기\"></SEO>\r\n      <Shop productName=\"화나요 스티커\" productImage={angry} />\r\n    </Layout>\r\n  )\r\n}\r\n","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","module.exports = require(\"regenerator-runtime\");\n"],"sourceRoot":""}